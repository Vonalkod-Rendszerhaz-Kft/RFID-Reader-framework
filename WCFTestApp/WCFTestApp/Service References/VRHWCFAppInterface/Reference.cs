//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFTestApp.VRHWCFAppInterface {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultBase", Namespace="http://schemas.datacontract.org/2004/07/VRHReaderFrameworkWCFInterface")]
    [System.SerializableAttribute()]
    public partial class ResultBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsReadResult", Namespace="http://schemas.datacontract.org/2004/07/VRHReaderFrameworkCommon")]
    [System.SerializableAttribute()]
    public partial class clsReadResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFTestApp.VRHWCFAppInterface.clsReadSubResult[] colSubResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dtReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFTestApp.VRHWCFAppInterface.eReadResultProcessingStatus eAppProcessingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFTestApp.VRHWCFAppInterface.eReadResultProcessingStatus eResultProcessingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFTestApp.VRHWCFAppInterface.eReadResultType eResultTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int iViewedStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFTestApp.VRHWCFAppInterface.clsReaderThreadConfig oReaderThreadConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sOriginalResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid uidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid uidActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid uidProcessorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid uidReaderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFTestApp.VRHWCFAppInterface.clsReadSubResult[] colSubResults {
            get {
                return this.colSubResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.colSubResultsField, value) != true)) {
                    this.colSubResultsField = value;
                    this.RaisePropertyChanged("colSubResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dtRead {
            get {
                return this.dtReadField;
            }
            set {
                if ((this.dtReadField.Equals(value) != true)) {
                    this.dtReadField = value;
                    this.RaisePropertyChanged("dtRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFTestApp.VRHWCFAppInterface.eReadResultProcessingStatus eAppProcessingStatus {
            get {
                return this.eAppProcessingStatusField;
            }
            set {
                if ((this.eAppProcessingStatusField.Equals(value) != true)) {
                    this.eAppProcessingStatusField = value;
                    this.RaisePropertyChanged("eAppProcessingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFTestApp.VRHWCFAppInterface.eReadResultProcessingStatus eResultProcessingStatus {
            get {
                return this.eResultProcessingStatusField;
            }
            set {
                if ((this.eResultProcessingStatusField.Equals(value) != true)) {
                    this.eResultProcessingStatusField = value;
                    this.RaisePropertyChanged("eResultProcessingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFTestApp.VRHWCFAppInterface.eReadResultType eResultType {
            get {
                return this.eResultTypeField;
            }
            set {
                if ((this.eResultTypeField.Equals(value) != true)) {
                    this.eResultTypeField = value;
                    this.RaisePropertyChanged("eResultType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iViewedState {
            get {
                return this.iViewedStateField;
            }
            set {
                if ((this.iViewedStateField.Equals(value) != true)) {
                    this.iViewedStateField = value;
                    this.RaisePropertyChanged("iViewedState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFTestApp.VRHWCFAppInterface.clsReaderThreadConfig oReaderThreadConfig {
            get {
                return this.oReaderThreadConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.oReaderThreadConfigField, value) != true)) {
                    this.oReaderThreadConfigField = value;
                    this.RaisePropertyChanged("oReaderThreadConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sOriginalResult {
            get {
                return this.sOriginalResultField;
            }
            set {
                if ((object.ReferenceEquals(this.sOriginalResultField, value) != true)) {
                    this.sOriginalResultField = value;
                    this.RaisePropertyChanged("sOriginalResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sResult {
            get {
                return this.sResultField;
            }
            set {
                if ((object.ReferenceEquals(this.sResultField, value) != true)) {
                    this.sResultField = value;
                    this.RaisePropertyChanged("sResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid uid {
            get {
                return this.uidField;
            }
            set {
                if ((this.uidField.Equals(value) != true)) {
                    this.uidField = value;
                    this.RaisePropertyChanged("uid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid uidAction {
            get {
                return this.uidActionField;
            }
            set {
                if ((this.uidActionField.Equals(value) != true)) {
                    this.uidActionField = value;
                    this.RaisePropertyChanged("uidAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid uidProcessor {
            get {
                return this.uidProcessorField;
            }
            set {
                if ((this.uidProcessorField.Equals(value) != true)) {
                    this.uidProcessorField = value;
                    this.RaisePropertyChanged("uidProcessor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid uidReader {
            get {
                return this.uidReaderField;
            }
            set {
                if ((this.uidReaderField.Equals(value) != true)) {
                    this.uidReaderField = value;
                    this.RaisePropertyChanged("uidReader");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsReaderThreadConfig", Namespace="http://schemas.datacontract.org/2004/07/VRHReaderFrameworkCommon")]
    [System.SerializableAttribute()]
    public partial class clsReaderThreadConfig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string assemblyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string configField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string controllerassemblyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string controllerconfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string controllertypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filterassemblyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filterconfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filtertypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string readeripField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string assembly {
            get {
                return this.assemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.assemblyField, value) != true)) {
                    this.assemblyField = value;
                    this.RaisePropertyChanged("assembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string config {
            get {
                return this.configField;
            }
            set {
                if ((object.ReferenceEquals(this.configField, value) != true)) {
                    this.configField = value;
                    this.RaisePropertyChanged("config");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string controllerassembly {
            get {
                return this.controllerassemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.controllerassemblyField, value) != true)) {
                    this.controllerassemblyField = value;
                    this.RaisePropertyChanged("controllerassembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string controllerconfig {
            get {
                return this.controllerconfigField;
            }
            set {
                if ((object.ReferenceEquals(this.controllerconfigField, value) != true)) {
                    this.controllerconfigField = value;
                    this.RaisePropertyChanged("controllerconfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string controllertype {
            get {
                return this.controllertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.controllertypeField, value) != true)) {
                    this.controllertypeField = value;
                    this.RaisePropertyChanged("controllertype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filterassembly {
            get {
                return this.filterassemblyField;
            }
            set {
                if ((object.ReferenceEquals(this.filterassemblyField, value) != true)) {
                    this.filterassemblyField = value;
                    this.RaisePropertyChanged("filterassembly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filterconfig {
            get {
                return this.filterconfigField;
            }
            set {
                if ((object.ReferenceEquals(this.filterconfigField, value) != true)) {
                    this.filterconfigField = value;
                    this.RaisePropertyChanged("filterconfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filtertype {
            get {
                return this.filtertypeField;
            }
            set {
                if ((object.ReferenceEquals(this.filtertypeField, value) != true)) {
                    this.filtertypeField = value;
                    this.RaisePropertyChanged("filtertype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string readerip {
            get {
                return this.readeripField;
            }
            set {
                if ((object.ReferenceEquals(this.readeripField, value) != true)) {
                    this.readeripField = value;
                    this.RaisePropertyChanged("readerip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsReadSubResult", Namespace="http://schemas.datacontract.org/2004/07/VRHReaderFrameworkCommon")]
    [System.SerializableAttribute()]
    public partial class clsReadSubResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eReadResultProcessingStatus", Namespace="http://schemas.datacontract.org/2004/07/VRHReaderFrameworkCommon")]
    public enum eReadResultProcessingStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotProcessed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processing = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Processed = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eReadResultType", Namespace="http://schemas.datacontract.org/2004/07/VRHReaderFrameworkCommon")]
    public enum eReadResultType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Data = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Event = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActionResult = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataEvent = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Log = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsReadResult_RID_TAGID_COUNT_RSSI", Namespace="http://schemas.datacontract.org/2004/07/VRHReaderFrameworkCommon")]
    [System.SerializableAttribute()]
    public partial class clsReadResult_RID_TAGID_COUNT_RSSI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double dRssiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFTestApp.VRHWCFAppInterface.eReadResultType eResultTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int iCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sReaderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sTagIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double dRssi {
            get {
                return this.dRssiField;
            }
            set {
                if ((this.dRssiField.Equals(value) != true)) {
                    this.dRssiField = value;
                    this.RaisePropertyChanged("dRssi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFTestApp.VRHWCFAppInterface.eReadResultType eResultType {
            get {
                return this.eResultTypeField;
            }
            set {
                if ((this.eResultTypeField.Equals(value) != true)) {
                    this.eResultTypeField = value;
                    this.RaisePropertyChanged("eResultType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int iCount {
            get {
                return this.iCountField;
            }
            set {
                if ((this.iCountField.Equals(value) != true)) {
                    this.iCountField = value;
                    this.RaisePropertyChanged("iCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sReaderId {
            get {
                return this.sReaderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.sReaderIdField, value) != true)) {
                    this.sReaderIdField = value;
                    this.RaisePropertyChanged("sReaderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sTagId {
            get {
                return this.sTagIdField;
            }
            set {
                if ((object.ReferenceEquals(this.sTagIdField, value) != true)) {
                    this.sTagIdField = value;
                    this.RaisePropertyChanged("sTagId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eControllerResultRequestType", Namespace="http://schemas.datacontract.org/2004/07/VRHReaderFrameworkCommon")]
    public enum eControllerResultRequestType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoResult = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unfiltered = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Filtered = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VRHWCFAppInterface.IAppInterface")]
    public interface IAppInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/Read", ReplyAction="http://tempuri.org/IAppInterface/ReadResponse")]
        WCFTestApp.VRHWCFAppInterface.ResultBase Read(string sReaderId, int iReadSeconds, int iWaitExecutionSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/Read", ReplyAction="http://tempuri.org/IAppInterface/ReadResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.ResultBase> ReadAsync(string sReaderId, int iReadSeconds, int iWaitExecutionSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/ExecuteReaderCommands", ReplyAction="http://tempuri.org/IAppInterface/ExecuteReaderCommandsResponse")]
        WCFTestApp.VRHWCFAppInterface.ResultBase ExecuteReaderCommands(string sReaderId, string sConfigFile, string sCommandSet, int iWaitExecutionSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/ExecuteReaderCommands", ReplyAction="http://tempuri.org/IAppInterface/ExecuteReaderCommandsResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.ResultBase> ExecuteReaderCommandsAsync(string sReaderId, string sConfigFile, string sCommandSet, int iWaitExecutionSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/ExecuteReaderCommand", ReplyAction="http://tempuri.org/IAppInterface/ExecuteReaderCommandResponse")]
        WCFTestApp.VRHWCFAppInterface.ResultBase ExecuteReaderCommand(string sReaderId, string sCommand, int iWaitExecutionSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/ExecuteReaderCommand", ReplyAction="http://tempuri.org/IAppInterface/ExecuteReaderCommandResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.ResultBase> ExecuteReaderCommandAsync(string sReaderId, string sCommand, int iWaitExecutionSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetResults", ReplyAction="http://tempuri.org/IAppInterface/GetResultsResponse")]
        WCFTestApp.VRHWCFAppInterface.GetResultsResponse GetResults(WCFTestApp.VRHWCFAppInterface.GetResultsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetResults", ReplyAction="http://tempuri.org/IAppInterface/GetResultsResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetResultsResponse> GetResultsAsync(WCFTestApp.VRHWCFAppInterface.GetResultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetResults_RID_TAGID_COUNT_RSSI", ReplyAction="http://tempuri.org/IAppInterface/GetResults_RID_TAGID_COUNT_RSSIResponse")]
        WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIResponse GetResults_RID_TAGID_COUNT_RSSI(WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetResults_RID_TAGID_COUNT_RSSI", ReplyAction="http://tempuri.org/IAppInterface/GetResults_RID_TAGID_COUNT_RSSIResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIResponse> GetResults_RID_TAGID_COUNT_RSSIAsync(WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetReaders", ReplyAction="http://tempuri.org/IAppInterface/GetReadersResponse")]
        string[] GetReaders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetReaders", ReplyAction="http://tempuri.org/IAppInterface/GetReadersResponse")]
        System.Threading.Tasks.Task<string[]> GetReadersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/SetResultRequestType", ReplyAction="http://tempuri.org/IAppInterface/SetResultRequestTypeResponse")]
        WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeResponse SetResultRequestType(WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/SetResultRequestType", ReplyAction="http://tempuri.org/IAppInterface/SetResultRequestTypeResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeResponse> SetResultRequestTypeAsync(WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetResultRequestType", ReplyAction="http://tempuri.org/IAppInterface/GetResultRequestTypeResponse")]
        WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeResponse GetResultRequestType(WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetResultRequestType", ReplyAction="http://tempuri.org/IAppInterface/GetResultRequestTypeResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeResponse> GetResultRequestTypeAsync(WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/SetCycle", ReplyAction="http://tempuri.org/IAppInterface/SetCycleResponse")]
        WCFTestApp.VRHWCFAppInterface.SetCycleResponse SetCycle(WCFTestApp.VRHWCFAppInterface.SetCycleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/SetCycle", ReplyAction="http://tempuri.org/IAppInterface/SetCycleResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.SetCycleResponse> SetCycleAsync(WCFTestApp.VRHWCFAppInterface.SetCycleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetCycle", ReplyAction="http://tempuri.org/IAppInterface/GetCycleResponse")]
        WCFTestApp.VRHWCFAppInterface.GetCycleResponse GetCycle(WCFTestApp.VRHWCFAppInterface.GetCycleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetCycle", ReplyAction="http://tempuri.org/IAppInterface/GetCycleResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetCycleResponse> GetCycleAsync(WCFTestApp.VRHWCFAppInterface.GetCycleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/SetTimeoutMode", ReplyAction="http://tempuri.org/IAppInterface/SetTimeoutModeResponse")]
        WCFTestApp.VRHWCFAppInterface.SetTimeoutModeResponse SetTimeoutMode(WCFTestApp.VRHWCFAppInterface.SetTimeoutModeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/SetTimeoutMode", ReplyAction="http://tempuri.org/IAppInterface/SetTimeoutModeResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.SetTimeoutModeResponse> SetTimeoutModeAsync(WCFTestApp.VRHWCFAppInterface.SetTimeoutModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetTimeoutMode", ReplyAction="http://tempuri.org/IAppInterface/GetTimeoutModeResponse")]
        WCFTestApp.VRHWCFAppInterface.GetTimeoutModeResponse GetTimeoutMode(WCFTestApp.VRHWCFAppInterface.GetTimeoutModeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/GetTimeoutMode", ReplyAction="http://tempuri.org/IAppInterface/GetTimeoutModeResponse")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetTimeoutModeResponse> GetTimeoutModeAsync(WCFTestApp.VRHWCFAppInterface.GetTimeoutModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/READGPI_IF2", ReplyAction="http://tempuri.org/IAppInterface/READGPI_IF2Response")]
        WCFTestApp.VRHWCFAppInterface.READGPI_IF2Response READGPI_IF2(WCFTestApp.VRHWCFAppInterface.READGPI_IF2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppInterface/READGPI_IF2", ReplyAction="http://tempuri.org/IAppInterface/READGPI_IF2Response")]
        System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.READGPI_IF2Response> READGPI_IF2Async(WCFTestApp.VRHWCFAppInterface.READGPI_IF2Request request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResults", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetResultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetResultsRequest() {
        }
        
        public GetResultsRequest(string sReaderId, string sError) {
            this.sReaderId = sReaderId;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResultsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetResultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WCFTestApp.VRHWCFAppInterface.clsReadResult[] GetResultsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetResultsResponse() {
        }
        
        public GetResultsResponse(WCFTestApp.VRHWCFAppInterface.clsReadResult[] GetResultsResult, string sError) {
            this.GetResultsResult = GetResultsResult;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResults_RID_TAGID_COUNT_RSSI", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetResults_RID_TAGID_COUNT_RSSIRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetResults_RID_TAGID_COUNT_RSSIRequest() {
        }
        
        public GetResults_RID_TAGID_COUNT_RSSIRequest(string sReaderId, string sError) {
            this.sReaderId = sReaderId;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResults_RID_TAGID_COUNT_RSSIResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetResults_RID_TAGID_COUNT_RSSIResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WCFTestApp.VRHWCFAppInterface.clsReadResult_RID_TAGID_COUNT_RSSI[] GetResults_RID_TAGID_COUNT_RSSIResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetResults_RID_TAGID_COUNT_RSSIResponse() {
        }
        
        public GetResults_RID_TAGID_COUNT_RSSIResponse(WCFTestApp.VRHWCFAppInterface.clsReadResult_RID_TAGID_COUNT_RSSI[] GetResults_RID_TAGID_COUNT_RSSIResult, string sError) {
            this.GetResults_RID_TAGID_COUNT_RSSIResult = GetResults_RID_TAGID_COUNT_RSSIResult;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetResultRequestType", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetResultRequestTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public WCFTestApp.VRHWCFAppInterface.eControllerResultRequestType eResultRequestType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string sError;
        
        public SetResultRequestTypeRequest() {
        }
        
        public SetResultRequestTypeRequest(string sReaderId, WCFTestApp.VRHWCFAppInterface.eControllerResultRequestType eResultRequestType, string sError) {
            this.sReaderId = sReaderId;
            this.eResultRequestType = eResultRequestType;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetResultRequestTypeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetResultRequestTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sError;
        
        public SetResultRequestTypeResponse() {
        }
        
        public SetResultRequestTypeResponse(string sError) {
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResultRequestType", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetResultRequestTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetResultRequestTypeRequest() {
        }
        
        public GetResultRequestTypeRequest(string sReaderId, string sError) {
            this.sReaderId = sReaderId;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResultRequestTypeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetResultRequestTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public WCFTestApp.VRHWCFAppInterface.eControllerResultRequestType GetResultRequestTypeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetResultRequestTypeResponse() {
        }
        
        public GetResultRequestTypeResponse(WCFTestApp.VRHWCFAppInterface.eControllerResultRequestType GetResultRequestTypeResult, string sError) {
            this.GetResultRequestTypeResult = GetResultRequestTypeResult;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCycle", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCycleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int iCycle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string sError;
        
        public SetCycleRequest() {
        }
        
        public SetCycleRequest(string sReaderId, int iCycle, string sError) {
            this.sReaderId = sReaderId;
            this.iCycle = iCycle;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCycleResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetCycleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sError;
        
        public SetCycleResponse() {
        }
        
        public SetCycleResponse(string sError) {
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCycle", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCycleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetCycleRequest() {
        }
        
        public GetCycleRequest(string sReaderId, string sError) {
            this.sReaderId = sReaderId;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCycleResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCycleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int GetCycleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetCycleResponse() {
        }
        
        public GetCycleResponse(int GetCycleResult, string sError) {
            this.GetCycleResult = GetCycleResult;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTimeoutMode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetTimeoutModeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int iTimeoutMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string sError;
        
        public SetTimeoutModeRequest() {
        }
        
        public SetTimeoutModeRequest(string sReaderId, int iTimeoutMode, string sError) {
            this.sReaderId = sReaderId;
            this.iTimeoutMode = iTimeoutMode;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTimeoutModeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SetTimeoutModeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sError;
        
        public SetTimeoutModeResponse() {
        }
        
        public SetTimeoutModeResponse(string sError) {
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeoutMode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTimeoutModeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetTimeoutModeRequest() {
        }
        
        public GetTimeoutModeRequest(string sReaderId, string sError) {
            this.sReaderId = sReaderId;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeoutModeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTimeoutModeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int GetTimeoutModeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sError;
        
        public GetTimeoutModeResponse() {
        }
        
        public GetTimeoutModeResponse(int GetTimeoutModeResult, string sError) {
            this.GetTimeoutModeResult = GetTimeoutModeResult;
            this.sError = sError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="READGPI_IF2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class READGPI_IF2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sReaderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int iWaitExecutionSeconds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool bInputA;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool bInputB;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public bool bInputC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool bInputD;
        
        public READGPI_IF2Request() {
        }
        
        public READGPI_IF2Request(string sReaderId, int iWaitExecutionSeconds, bool bInputA, bool bInputB, bool bInputC, bool bInputD) {
            this.sReaderId = sReaderId;
            this.iWaitExecutionSeconds = iWaitExecutionSeconds;
            this.bInputA = bInputA;
            this.bInputB = bInputB;
            this.bInputC = bInputC;
            this.bInputD = bInputD;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="READGPI_IF2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class READGPI_IF2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string READGPI_IF2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public bool bInputA;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool bInputB;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public bool bInputC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public bool bInputD;
        
        public READGPI_IF2Response() {
        }
        
        public READGPI_IF2Response(string READGPI_IF2Result, bool bInputA, bool bInputB, bool bInputC, bool bInputD) {
            this.READGPI_IF2Result = READGPI_IF2Result;
            this.bInputA = bInputA;
            this.bInputB = bInputB;
            this.bInputC = bInputC;
            this.bInputD = bInputD;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAppInterfaceChannel : WCFTestApp.VRHWCFAppInterface.IAppInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppInterfaceClient : System.ServiceModel.ClientBase<WCFTestApp.VRHWCFAppInterface.IAppInterface>, WCFTestApp.VRHWCFAppInterface.IAppInterface {
        
        public AppInterfaceClient() {
        }
        
        public AppInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFTestApp.VRHWCFAppInterface.ResultBase Read(string sReaderId, int iReadSeconds, int iWaitExecutionSeconds) {
            return base.Channel.Read(sReaderId, iReadSeconds, iWaitExecutionSeconds);
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.ResultBase> ReadAsync(string sReaderId, int iReadSeconds, int iWaitExecutionSeconds) {
            return base.Channel.ReadAsync(sReaderId, iReadSeconds, iWaitExecutionSeconds);
        }
        
        public WCFTestApp.VRHWCFAppInterface.ResultBase ExecuteReaderCommands(string sReaderId, string sConfigFile, string sCommandSet, int iWaitExecutionSeconds) {
            return base.Channel.ExecuteReaderCommands(sReaderId, sConfigFile, sCommandSet, iWaitExecutionSeconds);
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.ResultBase> ExecuteReaderCommandsAsync(string sReaderId, string sConfigFile, string sCommandSet, int iWaitExecutionSeconds) {
            return base.Channel.ExecuteReaderCommandsAsync(sReaderId, sConfigFile, sCommandSet, iWaitExecutionSeconds);
        }
        
        public WCFTestApp.VRHWCFAppInterface.ResultBase ExecuteReaderCommand(string sReaderId, string sCommand, int iWaitExecutionSeconds) {
            return base.Channel.ExecuteReaderCommand(sReaderId, sCommand, iWaitExecutionSeconds);
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.ResultBase> ExecuteReaderCommandAsync(string sReaderId, string sCommand, int iWaitExecutionSeconds) {
            return base.Channel.ExecuteReaderCommandAsync(sReaderId, sCommand, iWaitExecutionSeconds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.GetResultsResponse WCFTestApp.VRHWCFAppInterface.IAppInterface.GetResults(WCFTestApp.VRHWCFAppInterface.GetResultsRequest request) {
            return base.Channel.GetResults(request);
        }
        
        public WCFTestApp.VRHWCFAppInterface.clsReadResult[] GetResults(string sReaderId, ref string sError) {
            WCFTestApp.VRHWCFAppInterface.GetResultsRequest inValue = new WCFTestApp.VRHWCFAppInterface.GetResultsRequest();
            inValue.sReaderId = sReaderId;
            inValue.sError = sError;
            WCFTestApp.VRHWCFAppInterface.GetResultsResponse retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).GetResults(inValue);
            sError = retVal.sError;
            return retVal.GetResultsResult;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetResultsResponse> GetResultsAsync(WCFTestApp.VRHWCFAppInterface.GetResultsRequest request) {
            return base.Channel.GetResultsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIResponse WCFTestApp.VRHWCFAppInterface.IAppInterface.GetResults_RID_TAGID_COUNT_RSSI(WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIRequest request) {
            return base.Channel.GetResults_RID_TAGID_COUNT_RSSI(request);
        }
        
        public WCFTestApp.VRHWCFAppInterface.clsReadResult_RID_TAGID_COUNT_RSSI[] GetResults_RID_TAGID_COUNT_RSSI(string sReaderId, ref string sError) {
            WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIRequest inValue = new WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIRequest();
            inValue.sReaderId = sReaderId;
            inValue.sError = sError;
            WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIResponse retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).GetResults_RID_TAGID_COUNT_RSSI(inValue);
            sError = retVal.sError;
            return retVal.GetResults_RID_TAGID_COUNT_RSSIResult;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIResponse> GetResults_RID_TAGID_COUNT_RSSIAsync(WCFTestApp.VRHWCFAppInterface.GetResults_RID_TAGID_COUNT_RSSIRequest request) {
            return base.Channel.GetResults_RID_TAGID_COUNT_RSSIAsync(request);
        }
        
        public string[] GetReaders() {
            return base.Channel.GetReaders();
        }
        
        public System.Threading.Tasks.Task<string[]> GetReadersAsync() {
            return base.Channel.GetReadersAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeResponse WCFTestApp.VRHWCFAppInterface.IAppInterface.SetResultRequestType(WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeRequest request) {
            return base.Channel.SetResultRequestType(request);
        }
        
        public void SetResultRequestType(string sReaderId, WCFTestApp.VRHWCFAppInterface.eControllerResultRequestType eResultRequestType, ref string sError) {
            WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeRequest inValue = new WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeRequest();
            inValue.sReaderId = sReaderId;
            inValue.eResultRequestType = eResultRequestType;
            inValue.sError = sError;
            WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeResponse retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).SetResultRequestType(inValue);
            sError = retVal.sError;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeResponse> SetResultRequestTypeAsync(WCFTestApp.VRHWCFAppInterface.SetResultRequestTypeRequest request) {
            return base.Channel.SetResultRequestTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeResponse WCFTestApp.VRHWCFAppInterface.IAppInterface.GetResultRequestType(WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeRequest request) {
            return base.Channel.GetResultRequestType(request);
        }
        
        public WCFTestApp.VRHWCFAppInterface.eControllerResultRequestType GetResultRequestType(string sReaderId, ref string sError) {
            WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeRequest inValue = new WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeRequest();
            inValue.sReaderId = sReaderId;
            inValue.sError = sError;
            WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeResponse retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).GetResultRequestType(inValue);
            sError = retVal.sError;
            return retVal.GetResultRequestTypeResult;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeResponse> GetResultRequestTypeAsync(WCFTestApp.VRHWCFAppInterface.GetResultRequestTypeRequest request) {
            return base.Channel.GetResultRequestTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.SetCycleResponse WCFTestApp.VRHWCFAppInterface.IAppInterface.SetCycle(WCFTestApp.VRHWCFAppInterface.SetCycleRequest request) {
            return base.Channel.SetCycle(request);
        }
        
        public void SetCycle(string sReaderId, int iCycle, ref string sError) {
            WCFTestApp.VRHWCFAppInterface.SetCycleRequest inValue = new WCFTestApp.VRHWCFAppInterface.SetCycleRequest();
            inValue.sReaderId = sReaderId;
            inValue.iCycle = iCycle;
            inValue.sError = sError;
            WCFTestApp.VRHWCFAppInterface.SetCycleResponse retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).SetCycle(inValue);
            sError = retVal.sError;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.SetCycleResponse> SetCycleAsync(WCFTestApp.VRHWCFAppInterface.SetCycleRequest request) {
            return base.Channel.SetCycleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.GetCycleResponse WCFTestApp.VRHWCFAppInterface.IAppInterface.GetCycle(WCFTestApp.VRHWCFAppInterface.GetCycleRequest request) {
            return base.Channel.GetCycle(request);
        }
        
        public int GetCycle(string sReaderId, ref string sError) {
            WCFTestApp.VRHWCFAppInterface.GetCycleRequest inValue = new WCFTestApp.VRHWCFAppInterface.GetCycleRequest();
            inValue.sReaderId = sReaderId;
            inValue.sError = sError;
            WCFTestApp.VRHWCFAppInterface.GetCycleResponse retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).GetCycle(inValue);
            sError = retVal.sError;
            return retVal.GetCycleResult;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetCycleResponse> GetCycleAsync(WCFTestApp.VRHWCFAppInterface.GetCycleRequest request) {
            return base.Channel.GetCycleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.SetTimeoutModeResponse WCFTestApp.VRHWCFAppInterface.IAppInterface.SetTimeoutMode(WCFTestApp.VRHWCFAppInterface.SetTimeoutModeRequest request) {
            return base.Channel.SetTimeoutMode(request);
        }
        
        public void SetTimeoutMode(string sReaderId, int iTimeoutMode, ref string sError) {
            WCFTestApp.VRHWCFAppInterface.SetTimeoutModeRequest inValue = new WCFTestApp.VRHWCFAppInterface.SetTimeoutModeRequest();
            inValue.sReaderId = sReaderId;
            inValue.iTimeoutMode = iTimeoutMode;
            inValue.sError = sError;
            WCFTestApp.VRHWCFAppInterface.SetTimeoutModeResponse retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).SetTimeoutMode(inValue);
            sError = retVal.sError;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.SetTimeoutModeResponse> SetTimeoutModeAsync(WCFTestApp.VRHWCFAppInterface.SetTimeoutModeRequest request) {
            return base.Channel.SetTimeoutModeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.GetTimeoutModeResponse WCFTestApp.VRHWCFAppInterface.IAppInterface.GetTimeoutMode(WCFTestApp.VRHWCFAppInterface.GetTimeoutModeRequest request) {
            return base.Channel.GetTimeoutMode(request);
        }
        
        public int GetTimeoutMode(string sReaderId, ref string sError) {
            WCFTestApp.VRHWCFAppInterface.GetTimeoutModeRequest inValue = new WCFTestApp.VRHWCFAppInterface.GetTimeoutModeRequest();
            inValue.sReaderId = sReaderId;
            inValue.sError = sError;
            WCFTestApp.VRHWCFAppInterface.GetTimeoutModeResponse retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).GetTimeoutMode(inValue);
            sError = retVal.sError;
            return retVal.GetTimeoutModeResult;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.GetTimeoutModeResponse> GetTimeoutModeAsync(WCFTestApp.VRHWCFAppInterface.GetTimeoutModeRequest request) {
            return base.Channel.GetTimeoutModeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFTestApp.VRHWCFAppInterface.READGPI_IF2Response WCFTestApp.VRHWCFAppInterface.IAppInterface.READGPI_IF2(WCFTestApp.VRHWCFAppInterface.READGPI_IF2Request request) {
            return base.Channel.READGPI_IF2(request);
        }
        
        public string READGPI_IF2(string sReaderId, int iWaitExecutionSeconds, ref bool bInputA, ref bool bInputB, ref bool bInputC, ref bool bInputD) {
            WCFTestApp.VRHWCFAppInterface.READGPI_IF2Request inValue = new WCFTestApp.VRHWCFAppInterface.READGPI_IF2Request();
            inValue.sReaderId = sReaderId;
            inValue.iWaitExecutionSeconds = iWaitExecutionSeconds;
            inValue.bInputA = bInputA;
            inValue.bInputB = bInputB;
            inValue.bInputC = bInputC;
            inValue.bInputD = bInputD;
            WCFTestApp.VRHWCFAppInterface.READGPI_IF2Response retVal = ((WCFTestApp.VRHWCFAppInterface.IAppInterface)(this)).READGPI_IF2(inValue);
            bInputA = retVal.bInputA;
            bInputB = retVal.bInputB;
            bInputC = retVal.bInputC;
            bInputD = retVal.bInputD;
            return retVal.READGPI_IF2Result;
        }
        
        public System.Threading.Tasks.Task<WCFTestApp.VRHWCFAppInterface.READGPI_IF2Response> READGPI_IF2Async(WCFTestApp.VRHWCFAppInterface.READGPI_IF2Request request) {
            return base.Channel.READGPI_IF2Async(request);
        }
    }
}
